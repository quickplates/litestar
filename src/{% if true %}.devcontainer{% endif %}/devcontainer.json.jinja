{
  // Build the base image
  "build": {
    // Docker context to use, relative to this file
    "context": "image/",
    // Dockerfile to use, relative to this file
    "dockerfile": "image/Dockerfile"
  },
  // Tool-specific settings
  "customizations": {
    // VS Code settings
    "vscode": {
      // Extensions to install
      "extensions": [
        // Nix
        "jnoortheen.nix-ide",
        // Direnv
        "mkhl.direnv",
        // Python
        "ms-python.python",
        // TOML
        "tamasfe.even-better-toml",
        // Task
        "task.vscode-task",
        // Trunk
        "Trunk.io"
      ],
      // Settings to override
      "settings": {
        // Set Trunk as the default formatter
        "editor.defaultFormatter": "trunk.io",
        // Use LSP for Nix
        "nix.enableLanguageServer": true,
        // Use nil as the language server
        "nix.serverPath": "nil",
        "nix.serverSettings": {
          "nil": {
            "formatting": {
              // Use 'nix fmt' for formatting
              "command": ["nix", "fmt", "--", "-"]
            }
          }
        },
        // Don't forward ports automatically
        "remote.autoForwardPorts": false,
        // Use Nix IDE instead of Trunk for Nix files
        "[nix]": {
          "editor.defaultFormatter": "jnoortheen.nix-ide"
        }
      }
    }
  },
  // Extra features to install to the container
  "features": {
    // Install Nix
    "ghcr.io/devcontainers/features/nix:1.2.0": {
      // Enable experimental features
      "extraNixConfig": "experimental-features = nix-command flakes",
      "version": "2.20.5"
    },
    // Install Direnv
    "ghcr.io/devcontainers-contrib/features/direnv:1.0.2": {
      "version": "2.34.0"
    },
    // Enable using Docker from within the container
    "ghcr.io/devcontainers/features/docker-in-docker:2.10.1": {
      "version": "24.0.8",
      // Use Docker Compose v2
      "dockerDashComposeVersion": "v2"
    },
    // Install Starship
    "ghcr.io/devcontainers-contrib/features/starship:1.0.9": {
      "version": "1.17.1"
    }
  },
  // Volumes
  "mounts": [
    // Mount secrets (shared)
    "source=devcontainer-shared-secrets,target=/secrets/,type=volume",
    // Mount nix store (not shared)
    "source=devcontainer-${devcontainerId}-nix,target=/nix/,type=volume",
    // Mount shell history (not shared)
    "source=devcontainer-${devcontainerId}-shellhistory-persist,target=/persist/shellhistory/,type=volume",
    // Mount trunk cache (shared)
    "source=devcontainer-shared-trunk-cache,target=/cache/trunk/,type=volume",
    // Mount poetry cache (shared)
    "source=devcontainer-shared-poetry-cache,target=/cache/poetry/,type=volume"{% if docs %},
    // Mount npm cache (shared)
    "source=devcontainer-shared-npm-cache,target=/cache/npm/,type=volume"
    {%- endif %}
  ],
  // Run a command when the container is created
  "onCreateCommand": "/hooks/create.sh",
  // Environment variables
  "remoteEnv": {
    // Set workspace path
    "WORKSPACE": "${containerWorkspaceFolder}"
  },
  // Run arguments
  "runArgs": [
    // Use host UTS namespace
    "--uts=host",
    // Use host IPC
    "--ipc=host",
    // Use host network
    "--network=host",
    // Use host user namespace
    "--userns=host",
    // Use host cgroup namespace
    "--cgroupns=host",
    // Run with elevated privileges
    "--privileged"
  ]
}
